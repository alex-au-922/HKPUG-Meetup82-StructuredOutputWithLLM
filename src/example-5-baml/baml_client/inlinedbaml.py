###############################################################################
#
#  Welcome to Baml! To use this generated code, please run the following:
#
#  $ pip install baml-py
#
###############################################################################

# This file was generated by BAML: please do not edit it. Instead, edit the
# BAML files and re-generate this code.
#
# ruff: noqa: E501,F401
# flake8: noqa: E501,F401
# pylint: disable=unused-import,line-too-long
# fmt: off

file_map = {
    
    "clients.baml": "client<llm> DeepSeek {\n  provider \"openai-generic\"\n  retry_policy Exponential\n  options {\n    api_key env.FIREWORKS_API_KEY \n    model \"accounts/fireworks/models/deepseek-v3\"\n    base_url \"https://api.fireworks.ai/inference/v1\"\n    temperature 0.1\n  }\n}\n\nretry_policy Exponential {\n  max_retries 2\n  strategy {\n    type exponential_backoff\n    delay_ms 300\n    multiplier 1.5\n    max_delay_ms 10000\n  }\n}\n\n",
    "generators.baml": "// This helps use auto generate libraries you can use in the language of\n// your choice. You can have multiple generators if you use multiple languages.\n// Just ensure that the output_dir is different for each generator.\ngenerator target {\n    // Valid values: \"python/pydantic\", \"typescript\", \"ruby/sorbet\", \"rest/openapi\"\n    output_type \"python/pydantic\"\n\n    // Where the generated code will be saved (relative to baml_src/)\n    output_dir \"../\"\n\n    // The version of the BAML package you have installed (e.g. same version as your baml-py or @boundaryml/baml).\n    // The BAML VSCode extension version should also match this version.\n    version \"0.77.0\"\n\n    // Valid values: \"sync\", \"async\"\n    // This controls what `b.FunctionName()` will be (sync or async).\n    default_client_mode sync\n}\n",
    "resume.baml": "// Defining a data model.\nenum JobNature {\n  ML_ENGINEER\n  SOFTWARE_ENGINEER\n  DEVOPS_ENGINEER\n  CLOUD_ENGINEER\n  OTHER\n}\n\nclass WorkExperience{\n  company_name string\n  job_title string\n  start_date string @description(\"ISO 8601 date format\")\n  end_date string @description(\"ISO 8601 date format\") \n  description string\n  job_nature JobNature\n\n  @@stream.done\n}\n\ntype WorkExperienceList = WorkExperience[]\n\nfunction ExtractResume(resume: string) -> WorkExperienceList {\n  client DeepSeek\n  prompt #\"\n    Parse the following resume into multiple work experiences. Do not include volunteer work or internships.\n    {{ resume }}\n\n    {{ ctx.output_format }}\n  \"# \n}\n",
}

def get_baml_files():
    return file_map